[{"C:\\Users\\kalu\\shopping-cart-with-react\\src\\index.js":"1","C:\\Users\\kalu\\shopping-cart-with-react\\src\\App.js":"2","C:\\Users\\kalu\\shopping-cart-with-react\\src\\contexts\\ProductsContext.js":"3","C:\\Users\\kalu\\shopping-cart-with-react\\src\\contexts\\CartContext.js":"4","C:\\Users\\kalu\\shopping-cart-with-react\\src\\routes\\routes.js":"5","C:\\Users\\kalu\\shopping-cart-with-react\\src\\contexts\\CartReducer.js":"6","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\detail\\Detail.js":"7","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\store\\Store.js":"8","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\cart\\Cart.js":"9","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\detail\\DetailPage.js":"10","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\store\\ProductsGrid.js":"11","C:\\Users\\kalu\\shopping-cart-with-react\\src\\helpers\\utils.js":"12","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\cart\\CartProducts.js":"13","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\store\\ProductItem.js":"14","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\cart\\CartItem.js":"15","C:\\Users\\kalu\\shopping-cart-with-react\\src\\components\\Layout.js":"16","C:\\Users\\kalu\\shopping-cart-with-react\\src\\flutter.js":"17","C:\\Users\\kalu\\shopping-cart-with-react\\src\\flutter-wave-key.js":"18"},{"size":219,"mtime":1609020846489,"results":"19","hashOfConfig":"20"},{"size":458,"mtime":1609020926667,"results":"21","hashOfConfig":"20"},{"size":1259,"mtime":1609026111899,"results":"22","hashOfConfig":"20"},{"size":1404,"mtime":1609035289465,"results":"23","hashOfConfig":"20"},{"size":715,"mtime":1609031881582,"results":"24","hashOfConfig":"20"},{"size":2199,"mtime":1609035514041,"results":"25","hashOfConfig":"20"},{"size":1310,"mtime":1609022245933,"results":"26","hashOfConfig":"20"},{"size":311,"mtime":1609021693882,"results":"27","hashOfConfig":"20"},{"size":2085,"mtime":1609042746513,"results":"28","hashOfConfig":"20"},{"size":2252,"mtime":1609022364199,"results":"29","hashOfConfig":"20"},{"size":859,"mtime":1609027910678,"results":"30","hashOfConfig":"20"},{"size":141,"mtime":1609021923535,"results":"31","hashOfConfig":"20"},{"size":1027,"mtime":1609023695802,"results":"32","hashOfConfig":"20"},{"size":2632,"mtime":1609028450394,"results":"33","hashOfConfig":"20"},{"size":2216,"mtime":1609022703134,"results":"34","hashOfConfig":"20"},{"size":479,"mtime":1609023037387,"results":"35","hashOfConfig":"20"},{"size":4787,"mtime":1609046207702,"results":"36","hashOfConfig":"20"},{"size":0,"mtime":1609046462157,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"jypkd8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\kalu\\shopping-cart-with-react\\src\\index.js",[],["83","84"],"C:\\Users\\kalu\\shopping-cart-with-react\\src\\App.js",[],"C:\\Users\\kalu\\shopping-cart-with-react\\src\\contexts\\ProductsContext.js",["85","86"],"import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ProductsContext = createContext()\r\n\r\nconst ProductsContextProvider = ({children}) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        fetch('https://fakestoreapi.com/products/')\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if(mounted) {\r\n                    setProducts(response)\r\n                }\r\n            })\r\n            return () => mounted = false;\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {loading && (\r\n                <div style={{ color: `green` }}>\r\n                loading products from the Fake API Store\r\n                </div>\r\n            )}\r\n            {error && (\r\n                <div style={{ color: `red` }}>\r\n                some error occurred, while fetching api\r\n                </div>\r\n            )}\r\n            <ProductsContext.Provider value={{products}}>\r\n                { children }\r\n            </ProductsContext.Provider>\r\n        </>\r\n        );\r\n    }\r\n    \r\n    export default ProductsContextProvider;","C:\\Users\\kalu\\shopping-cart-with-react\\src\\contexts\\CartContext.js",[],"C:\\Users\\kalu\\shopping-cart-with-react\\src\\routes\\routes.js",[],"C:\\Users\\kalu\\shopping-cart-with-react\\src\\contexts\\CartReducer.js",["87"],"import Flutter from \"../flutter\";\r\n\r\nconst Storage = (cartItems) => {\r\n    localStorage.setItem('cart', JSON.stringify(cartItems.length > 0 ? cartItems: []));\r\n}\r\n\r\nexport const sumItems = cartItems => {\r\n    Storage(cartItems);\r\n    let itemCount = cartItems.reduce((total, product) => total + product.quantity, 0);\r\n    let total = cartItems.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\r\n    return { itemCount, total }\r\n}\r\n\r\nexport const CartReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_ITEM\":\r\n            if (!state.cartItems.find(item => item.id === action.payload.id)) {\r\n                state.cartItems.push({\r\n                    ...action.payload,\r\n                    quantity: 1\r\n                })\r\n            } \r\n\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems),\r\n                cartItems: [...state.cartItems]\r\n            }\r\n        case \"REMOVE_ITEM\":\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems.filter(item => item.id !== action.payload.id)),\r\n                cartItems: [...state.cartItems.filter(item => item.id !== action.payload.id)]\r\n            }\r\n        case \"INCREASE\":\r\n            state.cartItems[state.cartItems.findIndex(item => item.id === action.payload.id)].quantity++\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems),\r\n                cartItems: [...state.cartItems]\r\n            }\r\n        case \"DECREASE\":\r\n            state.cartItems[state.cartItems.findIndex(item => item.id === action.payload.id)].quantity--\r\n            return {\r\n                ...state,\r\n                ...sumItems(state.cartItems),\r\n                cartItems: [...state.cartItems]\r\n            }\r\n        case \"CHECKOUT\":\r\n            return {\r\n                cartItems: [],\r\n                checkout: true,\r\n                ...sumItems([]),\r\n            }\r\n            \r\n        case \"CLEAR\":\r\n                return {\r\n                    cartItems: [],\r\n                    ...sumItems([]),\r\n                }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\detail\\Detail.js",["88"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nimport DetailPage from './DetailPage';\r\n\r\nconst Detail = ({ match }) => {\r\n  const {\r\n    params: { productId },\r\n  } = match;\r\n  \r\n  const [product, setProduct] = useState(null);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const API_BASE_URL = `https://fakestoreapi.com/products`;\r\n    const fetchProduct = async () => {\r\n      setLoading(true);\r\n      setError(false);\r\n      try {\r\n        const result = await axios.get(`${API_BASE_URL}/${productId}`);\r\n        setProduct(result.data);\r\n        console.log(result.data)\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    // Call the API\r\n    fetchProduct();\r\n  }, [productId]);\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <div style={{ color: `green` }}>\r\n          loading product detail for product ID: <strong>{productId}</strong>\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div style={{ color: `red` }}>\r\n          some error occurred, while fetching api\r\n        </div>\r\n      )}\r\n      {product && <DetailPage product={product} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\store\\Store.js",[],"C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\cart\\Cart.js",["89","90","91","92"],"C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\detail\\DetailPage.js",["93","94","95","96"],"import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CartContext } from '../../contexts/CartContext';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nconst DetailPage = ({ product }) => {\r\n\r\n    const { addProduct, cartItems } = useContext(CartContext);\r\n\r\n    const isInCart = product => {\r\n        return !!cartItems.find(item => item.id === product.id);\r\n    }\r\n    \r\n    return (\r\n        <Container className=\"product\">\r\n            <Link to={`/`}>Go back to product list</Link>\r\n            <div className=\"Home\">\r\n                <div className=\"lander\">\r\n                <p className=\"detail-title\">{product.title}</p>\r\n                <img \r\n                    src={product.image} \r\n                    className=\"img-fluid\" \r\n                    alt={product.category} \r\n                    width=\"300px\"\r\n                    height=\"300px\"\r\n                    className=\"detail-img\"\r\n                />\r\n                <hr />\r\n                \r\n                <p className=\"detail-desc\">{product.description}</p>\r\n                <div>\r\n                    <p><button className=\"price\">PRICE:</button> ${product.price}</p>\r\n                </div>\r\n                <div>\r\n                {\r\n                        isInCart(product) &&\r\n                            <Link to=\"/cart\">\r\n                                <button \r\n                                onClick={() => addProduct(product)}\r\n                                className=\"cart-button-detail\">\r\n                                    ADD MORE\r\n                                </button>\r\n                            </Link>\r\n                }\r\n                {\r\n                        !isInCart(product) &&\r\n                            <Link to=\"/cart\">\r\n                                <button \r\n                                onClick={() => addProduct(product)}\r\n                                className=\"cart-button-detail\">\r\n                                    ADD TO CART\r\n                                </button>\r\n                            </Link>\r\n                }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    )\r\n\r\n};\r\n\r\nexport default DetailPage;\r\n\r\n","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\store\\ProductsGrid.js",["97","98","99"],"import React, { useContext } from 'react';\r\nimport ProductItem from './ProductItem';\r\n\r\nimport { Container, Row, Col, Button, Badge } from 'react-bootstrap';\r\nimport { ProductsContext } from '../../contexts/ProductsContext';\r\n\r\nconst ProductsGrid = () => {\r\n\r\n    const { products } = useContext(ProductsContext)\r\n\r\n    return (\r\n        <Container>\r\n            <h3 className=\"product-list-caption\">Product List</h3>\r\n            <h4 className=\"product-list-text\">There are {products.length} Products</h4>\r\n            <Row className=\"product-detail\">\r\n                {products.map(product => (\r\n                    <ProductItem \r\n                    key={product.id}\r\n                    product={product}\r\n                    />\r\n                    ))\r\n                }\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductsGrid;","C:\\Users\\kalu\\shopping-cart-with-react\\src\\helpers\\utils.js",[],"C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\cart\\CartProducts.js",["100"],"import React, { useContext } from 'react';\r\nimport { CartContext } from '../../contexts/CartContext';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport CartItem from './CartItem';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CartProducts = () => {\r\n\r\n    const { cartItems, itemCount } = useContext(CartContext);\r\n\r\n    return (\r\n        <Container>\r\n            <Link to={`/`}>Go back to product list</Link>\r\n            <Row className=\"cart-heading-row\">\r\n                <Col xs={6} md={6} className=\"cart-heading\">\r\n                    <h3 className=\"cart-heading-text\">My Bag</h3>\r\n                </Col>\r\n                <Col xs={6} md={6} className=\"cart-heading\">\r\n                    <h3 className=\"cart-heading-text\">Total:  {cartItems.length} items</h3>\r\n                </Col>\r\n            </Row>\r\n            \r\n            {\r\n                cartItems.map(product => <CartItem key={product.id} product={product}/>)\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CartProducts;","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\store\\ProductItem.js",["101"],"import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Container, Row, Col, Button, Badge } from 'react-bootstrap';\r\nimport { CartContext } from '../../contexts/CartContext';\r\nimport { formatNumber } from '../../helpers/utils';\r\n\r\nconst ProductItem = ({product}) => {\r\n\r\n    const { addProduct, cartItems, increase } = useContext(CartContext);\r\n\r\n    const isInCart = product => {\r\n        return !!cartItems.find(item => item.id === product.id);\r\n    }\r\n\r\n    return (\r\n        <Col xs={6} md={4} lg={3} className=\"product-list\">\r\n            <Col xs={12} md={12} className=\"product-img\">\r\n            <Link to={`/product/${product.id}`}>\r\n                <img \r\n                    src={product.image} \r\n                    alt={product.category} \r\n                    className=\"img-fluid prod-img d-block\"\r\n                    style={{margin: \"0 auto\"}} \r\n                    width=\"150px\"\r\n                    height=\"150px\"\r\n                />\r\n            </Link>\r\n            </Col>\r\n            <Row className=\"other-product-detail\">\r\n                <Col xs={6} md={6}>\r\n                    <h3>{product.category}</h3>\r\n                </Col>\r\n                <Col xs={6} md={6}>\r\n                    <h3><Badge color=\"success\">PRICE:</Badge> {formatNumber(product.price)}</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={6} md={6}>\r\n                    {/* <Button className=\"detail-button\">SEE DETAIL</Button> */}\r\n                    {/* <Link to={`/product/${product.id}`}><Button className=\"detail-button\">SEE DETAIL</Button></Link> */}\r\n                </Col>\r\n                <Col xs={12} md={12}>\r\n                    {\r\n                        isInCart(product) &&\r\n                        <Link to={`/cart`}>\r\n                            <Button \r\n                                onClick={() => increase(product)}\r\n                                className=\"cart-button\">ADD MORE\r\n                            </Button>\r\n                        </Link>\r\n                    }\r\n                </Col>\r\n                <Col xs={12} md={12}> \r\n                    {\r\n                        !isInCart(product) &&\r\n                        <Link to={`/cart`}>\r\n                            <Button \r\n                                onClick={() => addProduct(product)}\r\n                                className=\"cart-button\">ADD TO CART\r\n                            </Button>\r\n                        </Link>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default ProductItem;","C:\\Users\\kalu\\shopping-cart-with-react\\src\\pages\\cart\\CartItem.js",["102"],"import React, { useContext } from 'react';\r\nimport { Container, Row, Col, Button, Badge } from 'react-bootstrap';\r\nimport { CartContext } from '../../contexts/CartContext';\r\nimport { formatNumber } from '../../helpers/utils';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartItem = ({product}) => {\r\n    const { increase, decrease, removeProduct } = useContext(CartContext);\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"cart-items\">\r\n                <Col xs={6} md={6}>\r\n                <Link to={`/product/${product.id}`}>\r\n                    <img \r\n                        src={product.image} \r\n                        alt={product.title}\r\n                        style={{maxHeight: \"200px\", maxWidth: \"200px\"}} \r\n                        className=\"img-fluid d-block cart-image\"\r\n                    />\r\n                </Link>\r\n                </Col>\r\n                <Col xs={6} md={6}>\r\n                    <h3 className=\"cart-items-title\">{product.title}</h3>\r\n                    <h3 className=\"cart-items-price\">{formatNumber(product.price)}</h3>\r\n                    {\r\n                        product.quantity > 1 &&\r\n                        <Button\r\n                            onClick={() => decrease(product)}\r\n                            className=\"cart-items-decrease\" \r\n                        > - \r\n                        </Button> \r\n                    } <span className=\"cart-items-quantity\">{product.quantity} </span>\r\n                        <Button\r\n                            onClick={() =>increase(product)}\r\n                            className=\"cart-items-increase\"\r\n                        > + \r\n                        </Button>\r\n                        {\r\n                        product.quantity === 1 && \r\n                        <Button\r\n                            onClick={() => removeProduct(product)}\r\n                            className=\"thrash\"\r\n                        >\r\n                            <i className=\"fas fa-trash-alt mt-1\"></i>\r\n                        </Button>      \r\n                    }\r\n                </Col>\r\n               \r\n                \r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CartItem;","C:\\Users\\kalu\\shopping-cart-with-react\\src\\components\\Layout.js",[],"C:\\Users\\kalu\\shopping-cart-with-react\\src\\flutter.js",[],"C:\\Users\\kalu\\shopping-cart-with-react\\src\\flutter-wave-key.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":7,"column":19,"nodeType":"109","messageId":"110","endLine":7,"endColumn":27},{"ruleId":"107","severity":1,"message":"111","line":8,"column":21,"nodeType":"109","messageId":"110","endLine":8,"endColumn":31},{"ruleId":"107","severity":1,"message":"112","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":15},{"ruleId":"107","severity":1,"message":"113","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"114","line":9,"column":10,"nodeType":"109","messageId":"110","endLine":9,"endColumn":19},{"ruleId":"107","severity":1,"message":"115","line":9,"column":31,"nodeType":"109","messageId":"110","endLine":9,"endColumn":37},{"ruleId":"107","severity":1,"message":"116","line":9,"column":39,"nodeType":"109","messageId":"110","endLine":9,"endColumn":44},{"ruleId":"107","severity":1,"message":"112","line":11,"column":8,"nodeType":"109","messageId":"110","endLine":11,"endColumn":15},{"ruleId":"107","severity":1,"message":"117","line":4,"column":21,"nodeType":"109","messageId":"110","endLine":4,"endColumn":24},{"ruleId":"107","severity":1,"message":"118","line":4,"column":26,"nodeType":"109","messageId":"110","endLine":4,"endColumn":29},{"ruleId":"107","severity":1,"message":"115","line":4,"column":31,"nodeType":"109","messageId":"110","endLine":4,"endColumn":37},{"ruleId":"119","severity":1,"message":"120","line":26,"column":21,"nodeType":"121","endLine":26,"endColumn":43},{"ruleId":"107","severity":1,"message":"118","line":4,"column":26,"nodeType":"109","messageId":"110","endLine":4,"endColumn":29},{"ruleId":"107","severity":1,"message":"115","line":4,"column":31,"nodeType":"109","messageId":"110","endLine":4,"endColumn":37},{"ruleId":"107","severity":1,"message":"116","line":4,"column":39,"nodeType":"109","messageId":"110","endLine":4,"endColumn":44},{"ruleId":"107","severity":1,"message":"122","line":9,"column":24,"nodeType":"109","messageId":"110","endLine":9,"endColumn":33},{"ruleId":"107","severity":1,"message":"114","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":19},{"ruleId":"107","severity":1,"message":"116","line":2,"column":39,"nodeType":"109","messageId":"110","endLine":2,"endColumn":44},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","'Flutter' is defined but never used.","'Link' is defined but never used.","'Container' is defined but never used.","'Button' is defined but never used.","'Badge' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'itemCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]